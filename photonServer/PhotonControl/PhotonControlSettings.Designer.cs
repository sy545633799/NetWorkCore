//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhotonControl {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class PhotonControlSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static PhotonControlSettings defaultInstance = ((PhotonControlSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new PhotonControlSettings())));
        
        public static PhotonControlSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string PhotonWorkingDirectory {
            get {
                return ((string)(this["PhotonWorkingDirectory"]));
            }
            set {
                this["PhotonWorkingDirectory"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("PhontonDashboardService")]
        public string CounterServiceName {
            get {
                return ((string)(this["CounterServiceName"]));
            }
            set {
                this["CounterServiceName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-si 01:00 -v mmddhhmm -cf \"..\\bin_tools\\perfmon\\logman.config.txt\"")]
        public string LogManCreateOptions {
            get {
                return ((string)(this["LogManCreateOptions"]));
            }
            set {
                this["LogManCreateOptions"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("photon_perf_log")]
        public string LogManSetName {
            get {
                return ((string)(this["LogManSetName"]));
            }
            set {
                this["LogManSetName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool Compact {
            get {
                return ((bool)(this["Compact"]));
            }
            set {
                this["Compact"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Lite,Master")]
        public string TestClientArguments {
            get {
                return ((string)(this["TestClientArguments"]));
            }
            set {
                this["TestClientArguments"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("..\\bin_tools\\stardust\\StarDust.cmd,..\\bin_tools\\loadbalancing.client\\Photon.LoadB" +
            "alancing.TestClient.exe")]
        public string TestClientPaths {
            get {
                return ((string)(this["TestClientPaths"]));
            }
            set {
                this["TestClientPaths"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Default,LoadBalancing (MyCloud)")]
        public string Instances {
            get {
                return ((string)(this["Instances"]));
            }
            set {
                this["Instances"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("..\\Loadbalancing\\GameServer1\\bin\\Photon.LoadBalancing.dll.config;..\\Loadbalancing" +
            "\\GameServer2\\bin\\Photon.LoadBalancing.dll.config")]
        public string GameServerConfigPaths {
            get {
                return ((string)(this["GameServerConfigPaths"]));
            }
            set {
                this["GameServerConfigPaths"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ReplaceFirewallRules {
            get {
                return ((bool)(this["ReplaceFirewallRules"]));
            }
            set {
                this["ReplaceFirewallRules"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseCmdFileToOpenLogs {
            get {
                return ((bool)(this["UseCmdFileToOpenLogs"]));
            }
            set {
                this["UseCmdFileToOpenLogs"] = value;
            }
        }
    }
}
